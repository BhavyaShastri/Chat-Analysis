import streamlit as st
from textblob import TextBlob
import pandas as pd
import altair as alt

#Fxn
def convert_to_df(sentiment):
    sentiment_dict = {'polarity':sentiment.polarity,'subjectivity':sentiment.subjectivity}
    sentiment_df = pd.DataFrame(dict(sentiment_dict).items(),columns = ['metric','value'])
    return sentiment_df

def main():
    st.title("Sentiment Analysis")
    st.subheader("Hello Streamlit")

    menu = ["Home","About"]
    choice = st.sidebar.selectbox("Menu",menu)

    if choice == "Home":
        st.subheader("Home")
        with st.form(key = 'nlpForm'):
            raw_text = st.text_area("Enter Text Here")
            submit_button = st.form_submit_button(label = 'Analyze')

        #layout
        col1,col2 = st.columns(2)
        if submit_button:

                with col1:
                   st.info("Results")
                   sentiment = TextBlob(raw_text).sentiment
                   st.write(sentiment)

                   #Emoji
                   if sentiment.polarity > 0:
                      st.markdown("Sentiment:: Positive :smiley: ")
                   elif sentiment.polarity < 0:
                      st.markdown("Sentiment:: Negative :angry: ")
                   else:
                       st.markdown("Sentiment:: Neutral 😐 ")

                   #DataFrame
                   result_df = convert_to_df(sentiment)
                   st.dataframe(result_df)

                   #Visualization
                   c = alt.Chart(result_df).mark_bar().encode(
                    x='metric',
                    y='value')
                   st.altair_chart(c,use_container_width=True)

                with col2:
                   st.info("Token Sentiment")

    else:
        st.subheader("About")

if __name__ == '__main__':
    main()
